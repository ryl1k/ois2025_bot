require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, {polling: true});

const ADMIN_ID = process.env.ADMIN_ID;
const TARGET_CHAT = process.env.TARGET_CHAT;

function readMessageFile(fileName) {
  try {
    const filePath = path.join(__dirname, 'messages', fileName);
    return fs.readFileSync(filePath, 'utf8');
  } catch (error) {
    console.error(`–ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É ${fileName}:`, error);
    return '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è';
  }
}

const menuKeyboard = {
  reply_markup: {
    inline_keyboard: [
      [
        { text: 'üìã –ö–æ–º—ñ—Å—ñ—è', callback_data: 'commission' },
        { text: 'üìÖ –î–∞—Ç–∏', callback_data: 'dates' }
      ],
      [
        { text: 'üìö –ü—Ä–µ–¥–º–µ—Ç–∏', callback_data: 'subjects' },
        { text: 'üïê –†–æ–∑–∫–ª–∞–¥', callback_data: 'schedule' }
      ],
      [
        { text: 'üí∞ –°—Ç–∏–ø–µ–Ω–¥—ñ—è', callback_data: 'studentship' },
        { text: 'üìä –û—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è', callback_data: 'rating' }
      ]
    ]
  }
};

bot.on('new_chat_members', (msg) => {
  const chatId = msg.chat.id;
  const messageId = msg.message_id;
  const newMembers = msg.new_chat_members;
  
  const welcomeMessage = `üéì –í—ñ—Ç–∞—é –≤ —á–∞—Ç—ñ OIS 2025! 

–Ø –±–æ—Ç-–ø–æ–º—ñ—á–Ω–∏–∫, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º –∑–æ—Ä—ñ—î–Ω—Ç—É–≤–∞—Ç–∏—Å—è –≤ –Ω–∞–≤—á–∞–Ω–Ω—ñ. 

üìã –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:
/menu - –≤—ñ–¥–∫—Ä–∏—Ç–∏ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
/start - –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º

üí° –ß–µ—Ä–µ–∑ –º–µ–Ω—é –≤–∏ –º–æ–∂–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø—Ä–æ:
‚Ä¢ –ö–æ–º—ñ—Å—ñ—ó —Ç–∞ –æ—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è
‚Ä¢ –í–∞–∂–ª–∏–≤—ñ –¥–∞—Ç–∏
‚Ä¢ –ü—Ä–µ–¥–º–µ—Ç–∏ —Ç–∞ —Ä–æ–∑–∫–ª–∞–¥  
‚Ä¢ –°—Ç–∏–ø–µ–Ω–¥—ñ—ó —Ç–∞ —ó—Ö –≤–∏–¥–∏
‚Ä¢ –°–∏—Å—Ç–µ–º—É –æ—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è

–ë–∞–∂–∞—é —É—Å–ø—ñ—Ö—ñ–≤ —É –Ω–∞–≤—á–∞–Ω–Ω—ñ! üìö‚ú®`;

  bot.sendMessage(chatId, welcomeMessage, {reply_to_message_id: messageId});
});

bot.onText(/\/menu/, (msg) => {
  const chatId = msg.chat.id;
  const menuMessage = `üìö –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é OIS 2025

–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó:`;
  
  bot.sendMessage(chatId, menuMessage, menuKeyboard);
});

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const startMessage = `üéì –í—ñ—Ç–∞—é! –Ø –±–æ—Ç-–ø–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ OIS 2025.

–Ø –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ:
üìã –ö–æ–º—ñ—Å—ñ—ó —Ç–∞ —Å–∏—Å—Ç–µ–º—É –æ—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è
üìÖ –í–∞–∂–ª–∏–≤—ñ –¥–∞—Ç–∏ —Å–µ–º–µ—Å—Ç—Ä—É
üìö –ü—Ä–µ–¥–º–µ—Ç–∏ –ø–µ—Ä—à–æ–≥–æ –∫—É—Ä—Å—É
üïê –†–æ–∑–∫–ª–∞–¥ –∑–∞–Ω—è—Ç—å
üí∞ –°—Ç–∏–ø–µ–Ω–¥—ñ—ó —Ç–∞ —ó—Ö –≤–∏–¥–∏
üìä –°–∏—Å—Ç–µ–º—É —Ä–µ–π—Ç–∏–Ω–≥–æ–≤–æ–≥–æ –æ—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è

–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /menu –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑ –¥–µ—Ç–∞–ª—å–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é.

–£–¥–∞—á—ñ –≤ –Ω–∞–≤—á–∞–Ω–Ω—ñ! ‚ú®`;
  
  bot.sendMessage(chatId, startMessage);
});

bot.onText(/\/broadcast (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  
  if (chatId.toString() !== ADMIN_ID) {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ–∑–≤–æ–ª—É –Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.');
    return;
  }
  
  const message = match[1];
  
  bot.sendMessage(TARGET_CHAT, message)
    .then(() => {
      bot.sendMessage(chatId, '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª OIS_2025 ‚úÖ');
    })
    .catch((error) => {
      console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª:', error);
      bot.sendMessage(chatId, '–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ‚ùå');
    });
});

bot.on('callback_query', (callbackQuery) => {
  const message = callbackQuery.message;
  const data = callbackQuery.data;
  const chatId = message.chat.id;

  if (data === 'back_to_menu') {
    const menuMessage = `üìö –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é OIS 2025

–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó:`;
    
    bot.editMessageText(menuMessage, {
      chat_id: chatId,
      message_id: message.message_id,
      reply_markup: menuKeyboard.reply_markup
    });
    
    bot.answerCallbackQuery(callbackQuery.id);
    return;
  }

  let messageContent = '';
  let fileName = '';

  switch (data) {
    case 'commission':
      fileName = 'commission.txt';
      break;
    case 'dates':
      fileName = 'dates.txt';
      break;
    case 'subjects':
      fileName = 'subjects.txt';
      break;
    case 'schedule':
      fileName = 'schedule.txt';
      break;
    case 'studentship':
      fileName = 'studentship.txt';
      break;
    case 'rating':
      fileName = 'rating.txt';
      break;
    default:
      bot.answerCallbackQuery(callbackQuery.id, '–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞');
      return;
  }

  messageContent = readMessageFile(fileName);
  
  bot.editMessageText(messageContent, {
    chat_id: chatId,
    message_id: message.message_id,
    reply_markup: {
      inline_keyboard: [[{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é', callback_data: 'back_to_menu' }]]
    }
  });

  bot.answerCallbackQuery(callbackQuery.id);
});

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ —ñ –æ—á—ñ–∫—É—î –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...');